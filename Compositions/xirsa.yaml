---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xirsaauths.javaland.cloud.platform.api
  labels:
    provider: aws
spec:
  compositeTypeRef:
    apiVersion: javaland.cloud.platform.api/v1alpha1
    kind: XIrsaAuth
  resources:
  ######################################################################
  - name: policy
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: Policy
      metadata:
        name: #patch
      spec:
        forProvider:
          name: #patch
          document: #patch
    patches:
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "eks-irsa-%s-%s-policy"
    - type: CombineFromComposite
      toFieldPath: spec.forProvider.name
      combine:
        variables:
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "eks-irsa-%s-%s-policy"
    - fromFieldPath: spec.parameters.policyDocument
      toFieldPath:   spec.forProvider.document
    - fromFieldPath: spec.service.stage
      toFieldPath:   metadata.annotations[awsome.platform.api/stage]
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[awsome.platform.api/stage]
      toFieldPath:   status.account
      transforms:
        - type: map
          map:
            dev:  "518283773752"
            qa:   "518283773752"
            prod: "518283773752"
  ######################################################################
  - name: role
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: Role
      metadata:
        name: #patch
      spec:
        forProvider:
          assumeRolePolicyDocument: #patch
    patches:
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "eks-irsa-%s-%s-role"
    - type: CombineFromComposite
      toFieldPath: spec.forProvider.assumeRolePolicyDocument
      combine:
        variables:
        - fromFieldPath: status.account
        - fromFieldPath: spec.parameters.oidcProvider
        - fromFieldPath: spec.parameters.oidcProvider
        - fromFieldPath: spec.service.stage
        - fromFieldPath: spec.parameters.serviceAccount
        strategy: string
        string:
          fmt: |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Federated": "arn:aws:iam::%s:oidc-provider/%s"
                  },
                  "Action": "sts:AssumeRoleWithWebIdentity",
                  "Condition": {
                    "StringEquals": {
                      "%s:sub": "system:serviceaccount:%s:%s"
                    }
                  }
                }
              ]
            }
      policy:
        fromFieldPath: Required
  ######################################################################
  - name: policy-attachement
    base:
      apiVersion: iam.aws.crossplane.io/v1beta1
      kind: RolePolicyAttachment
      metadata:
        name: #patch
      spec:
        forProvider:
          policyArnSelector:
            matchControllerRef: true
          roleNameSelector:
            matchControllerRef: true
    patches:
    - type: CombineFromComposite
      toFieldPath: metadata.name
      combine:
        variables:
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "%s-%s-role-attachement"