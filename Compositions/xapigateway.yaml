---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: xapigateways.javaland.cloud.platform.api
  labels:
    provider: aws
spec:
  compositeTypeRef:
    apiVersion: javaland.cloud.platform.api/v1alpha1
    kind: XApiGateway
  resources:
  ######################################################################
  - name: aws-apigateway
    base:
      apiVersion: apigatewayv2.aws.crossplane.io/v1alpha1
      kind: API
      spec:
        forProvider:
          region: #patch
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "%s-%s"
      toFieldPath: spec.forProvider.name
    - fromFieldPath: spec.parameters.region
      toFieldPath:   spec.forProvider.region
    - fromFieldPath: spec.parameters.protocol
      toFieldPath:   spec.forProvider.protocolType
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.apiID
      toFieldPath: status.apiID
    - fromFieldPath: spec.service.stage
      toFieldPath:   metadata.annotations[javaland.cloud.platform.api/stage]
    - type: ToCompositeFieldPath
      fromFieldPath: metadata.annotations[javaland.cloud.platform.api/stage]
      toFieldPath: status.account
      policy:
        fromFieldPath: Required
      transforms:
        - type: map
          map:
            dev: "518283773752"
            qa:  "518283773752"
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.parameters.protocol
        - fromFieldPath: spec.service.name
        strategy: string
        string:
          fmt: "%s API for %s"
      toFieldPath: spec.forProvider.description
  ######################################################################
  - name: aws-cloudwatch-loggroup
    base:
      apiVersion: cloudwatchlogs.aws.crossplane.io/v1alpha1
      kind: LogGroup
      spec:
        forProvider:
          retentionInDays: 30
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "/apigw/%s-%s"
      toFieldPath: spec.forProvider.logGroupName
    - fromFieldPath: spec.parameters.region
      toFieldPath:   spec.forProvider.region
    - fromFieldPath: spec.logging.rentention
      toFieldPath:   spec.forProvider.retentionInDays
  ######################################################################
  # - name: terraform-fetch-values
  #   base:
  #     apiVersion: tf.crossplane.io/v1alpha1
  #     kind: Workspace
  #     metadata:
  #       name: example-test
  #     spec:
  #       forProvider:
  #         source: Inline
  #         # module: |
      
  #         #   data "aws_lb" "ingress_alb" {
  #         #     name = "dev-cluster-services"
  #         #   }

  #         #   data "aws_lb_listener" "select80" {
  #         #     load_balancer_arn = data.aws_lb.ingress_alb.arn
  #         #     port = 80
  #         #   }

  #         #   output "listenerARN" {
  #         #     value = data.aws_lb_listener.select80.arn
  #         #   }

  #         #   data "aws_eks_cluster" "cluster" {
  #         #     name = "dev-cluster"
  #         #   }

  #         #   output "vpcLinkID" {
  #         #     value = data.aws_eks_cluster.cluster.tags.vpcLinkID
  #         #   }
  #   patches:
  #   - type: CombineFromComposite
  #     combine:
  #       variables:
  #       - fromFieldPath: spec.parameters.albName
  #       - fromFieldPath: spec.parameters.clusterName
  #       strategy: string
  #       string:
  #         fmt: |
  #           data "aws_lb" "ingress_alb" {
  #             name = "%s"
  #           }

  #           data "aws_lb_listener" "select80" {
  #             load_balancer_arn = data.aws_lb.ingress_alb.arn
  #             port = 80
  #           }

  #           output "listenerARN" {
  #             value = data.aws_lb_listener.select80.arn
  #           }

  #           data "aws_eks_cluster" "cluster" {
  #             name = "%s"
  #           }

  #           output "vpcLinkID" {
  #             value = data.aws_eks_cluster.cluster.tags.vpcLinkID
  #           }

  #     toFieldPath: spec.forProvider.module
  #   - type: ToCompositeFieldPath
  #     fromFieldPath: status.atProvider.outputs.listenerARN
  #     toFieldPath: status.listenerARN
  #   - type: ToCompositeFieldPath
  #     fromFieldPath: status.atProvider.outputs.vpcLinkID
  #     toFieldPath: status.vpcLinkID
  ######################################################################
  - name: aws-apigateway-route
    base:
      apiVersion: apigatewayv2.aws.crossplane.io/v1alpha1
      kind: Route
      spec: 
        forProvider:
          region: #patch
          routeKey: 'ANY /{proxy+}' 
          apiIdSelector:
            matchControllerRef: true
    patches:
    - fromFieldPath: spec.parameters.region
      toFieldPath:   spec.forProvider.region
    - fromFieldPath: status.integrationID
      toFieldPath: spec.forProvider.target
      policy:
        fromFieldPath: Required
      transforms:
      - type: string
        string:
          fmt: 'integrations/%s'
    
  ######################################################################
  - name: aws-apigateway-integration
    base:
      apiVersion: apigatewayv2.aws.crossplane.io/v1alpha1
      kind: Integration
      metadata:
        name: test
      spec: 
        forProvider:
          region: #patch
          apiIdSelector:
            matchControllerRef: true
          integrationType: HTTP_PROXY
          connectionType: VPC_LINK
          connectionID: 7ksz71
          payloadFormatVersion: "1.0"
          integrationMethod: ANY
          integrationURI: arn:aws:elasticloadbalancing:eu-west-1:518283773752:listener/app/dev-cluster-services/818385478d87a4e1/eaecff01fda825bd
    patches:
    # - fromFieldPath: status.vpcLinkID
    #   toFieldPath: spec.forProvider.connectionID
    #   policy:
    #     fromFieldPath: Required
    # - fromFieldPath: status.listenerARN
    #   toFieldPath: spec.forProvider.integrationURI
    #   policy:
    #     fromFieldPath: Required
    - fromFieldPath: spec.parameters.region
      toFieldPath:   spec.forProvider.region
    - type: ToCompositeFieldPath
      fromFieldPath: status.atProvider.integrationID
      toFieldPath:   status.integrationID 
  ######################################################################
  - name: aws-apigateway-domain-mapping
    base:
      apiVersion: apigatewayv2.aws.crossplane.io/v1alpha1
      kind: APIMapping
      spec:
        forProvider:
          apiIdSelector:
            matchControllerRef: true
          stageSelector:
            matchControllerRef: true
    patches:
    - type: CombineFromComposite
      combine:
        variables:
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "%s-%s-domain-mapping"
      toFieldPath: metadata.name
    - fromFieldPath: spec.parameters.region
      toFieldPath:   spec.forProvider.region
    - fromFieldPath: spec.parameters.domainName
      toFieldPath:   spec.forProvider.domainName
  ######################################################################
  - name: apigw-stage
    base:
      apiVersion: apigatewayv2.aws.crossplane.io/v1alpha1
      kind: Stage
      metadata:
        annotations:
          crossplane.io/external-name: "$default"
      spec:
        forProvider:
          autoDeploy: true
          apiIdSelector:
            matchControllerRef: true
          accessLogSettings:
            format: "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"caller\":\"$context.identity.caller\",\"user\":\"$context.identity.user\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
            destinationARN: ""
    patches:
    - fromFieldPath: spec.parameters.region
      toFieldPath:   spec.forProvider.region
    - type: CombineFromComposite
      toFieldPath: spec.forProvider.accessLogSettings.destinationARN
      combine:
        variables:
        - fromFieldPath: spec.parameters.region
        - fromFieldPath: status.account
        - fromFieldPath: spec.service.name
        - fromFieldPath: spec.service.stage
        strategy: string
        string:
          fmt: "arn:aws:logs:%s:%s:log-group:/apigw/%s-%s:*"
      policy:
        fromFieldPath: Required